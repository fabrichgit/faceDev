// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        String  @id @default(cuid()) @map("_id")
  title     String
  content   String?
  published Boolean @default(false)
  author    Users?  @relation(fields: [authorId], references: [id])
  authorId  String?
}

model Users {
  id         String     @id @default(cuid()) @map("_id")
  name       String?
  email      String?    @unique
  Pseudo     String     @unique
  Links      Json[]
  createdAt  DateTime   @default(now()) @map(name: "created_at")
  updatedAt  DateTime   @updatedAt @map(name: "updated_at")
  posts      Post[]
  Projects   Projects[]
  Star       Star[]
  Comment    Comment[]
  Like       Like[]
  isAprouved Boolean    @default(false)
}

enum CategoryProject {
  beginner
  intermediate
  ultimate
}

model Projects {
  id          String          @id @default(cuid()) @map("_id")
  name        String          @unique
  description String
  category    CategoryProject
  language    String[]
  video       String?
  photos      String[]
  user        Users           @relation(fields: [userId], references: [id])
  userId      String
  Star        Star[]
  Comment     Comment[]
}

model Star {
  id         String   @id @default(cuid()) @map("_id")
  project    Projects @relation(fields: [projectsId], references: [id])
  projectsId String
  user       Users    @relation(fields: [userId], references: [id])
  userId     String
}

model Comment {
  id         String   @id @default(cuid()) @map("_id")
  project    Projects @relation(fields: [projectsId], references: [id])
  projectsId String
  user       Users    @relation(fields: [userId], references: [id])
  userId     String
  content    String
  Like       Like[]
}

model Like {
  id        String  @id @default(cuid()) @map("_id")
  user      Users   @relation(fields: [userId], references: [id])
  comment   Comment @relation(fields: [commentId], references: [id])
  userId    String
  commentId String
}
